kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: django-static
  namespace: cls-prod
  annotations:
    volume.beta.kubernetes.io/storage-class: "gluster-heketi"
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: django-media
  namespace: cls-prod
  annotations:
    volume.beta.kubernetes.io/storage-class: "gluster-heketi"
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: django-conf
  namespace: cls-prod
data:
  HOST: 2.cardifftec.uk
  DJANGO_SETTINGS_MODULE: wewillfixyourpc_cls.settings
  EXTERNAL_URL: "https://2.cardifftec.uk"
  SENTRY_ENVIRONMENT: "prod"
  EMAIL_HOST: "mail.misell.cymru"
  KEYCLOAK_SERVER_URL: "https://account.cardifftec.uk/"
  KEYCLOAK_REALM: wwfypc
  KEYCLOAK_SCOPES: "openid email profile"
  KEYCLOAK_CLIENT_ID: "cls"
  LABEL_PRINTER: "10.5.0.1"
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: db-conf
  namespace: cls-prod
data:
  HOST: "postgres.postgres"
  NAME: "cls"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: django
  namespace: cls-prod
  labels:
    app: django
spec:
  replicas: 1
  selector:
    matchLabels:
      app: django
  template:
    metadata:
      labels:
        app: django
    spec:
      volumes:
        - name: static
          persistentVolumeClaim:
            claimName: django-static
        - name: media
          persistentVolumeClaim:
            claimName: django-media
      initContainers:
        - name: django
          image: theenbyperor/wwfypc-cls:(version)
          imagePullPolicy: Always
          command: ["sh", "-c", "python3 manage.py collectstatic --noinput && python3 manage.py migrate && python3 manage.py sync-keycloak"]
          ports:
            - containerPort: 8000
          volumeMounts:
            - mountPath: "/app/static/"
              name: static
            - mountPath: "/app/media/"
              name: media
          envFrom:
            - configMapRef:
                name: django-conf
            - configMapRef:
                name: db-conf
              prefix: "DB_"
            - secretRef:
                name: db-creds
              prefix: "DB_"
            - secretRef:
                name: django-secret
            - secretRef:
                name: email-creds
              prefix: "EMAIL_"
            - secretRef:
                name: keycloak
              prefix: "KEYCLOAK_"
            - secretRef:
                name: firebase
              prefix: "FIREBASE_"
            - secretRef:
                name: nexmo
              prefix: "NEXMO_"
      containers:
        - name: gunicorn
          image: theenbyperor/wwfypc-cls:(version)
          imagePullPolicy: Always
          command: ["gunicorn", "-w", "4", "-b", "0.0.0.0:8000", "--forwarded-allow-ips", "*", "--access-logfile", "-", "wewillfixyourpc_cls.wsgi:application"]
          ports:
            - containerPort: 8000
          volumeMounts:
            - mountPath: "/app/static/"
              name: static
            - mountPath: "/app/media/"
              name: media
          envFrom:
            - configMapRef:
                name: django-conf
            - configMapRef:
                name: db-conf
              prefix: "DB_"
            - secretRef:
                name: db-creds
              prefix: "DB_"
            - secretRef:
                name: django-secret
            - secretRef:
                name: email-creds
              prefix: "EMAIL_"
            - secretRef:
                name: keycloak
              prefix: "KEYCLOAK_"
            - secretRef:
                name: nexmo
              prefix: "NEXMO_"
---
---
apiVersion: v1
kind: Service
metadata:
  namespace: cls-prod
  name: django
  labels:
    app: django
spec:
  selector:
    app: django
  ports:
    - port: 8000
      targetPort: 8000
      name: gunicorn
